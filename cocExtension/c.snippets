# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet fr_json_string_item "" w
${1:variable} = cJSON_GetObjectItemCaseSensitive(${2:object}, "$1");
if (cJSON_IsString($1) && $1->valuestring != NULL) {
	${3:zev_remplissage}
}
endsnippet

snippet fr_json_object_item "Description" b
${1:variable}= cJSON_GetObjectItemCaseSensitive(${2:object}, "$1");
endsnippet

snippet fr_json_number_item "Description" b
${1:variable} = cJSON_GetObjectItemCaseSensitive(${2:object}, "$1");
if (cJSON_IsNumber($1)) {
      zev->$1= $1->valuedouble;
}
endsnippet

snippet fr_add_string_with_zev "Description" b
if (zev.${1:test} != scenario_init.$1) {
    strcpy(word, "$1");
	  add_string_with_zev_number(schema_json, observation_geometry, zev.$1,
														word);
}
endsnippet

snippet fr_cmp "Description" b
if (strcmp(word, "$1") == 0) {
$2
}

endsnippet

#snippet fr_add_number "Description" b
#if (zev.${1:test} != scenario_init.$1) {
    #strcpy(word, "$1");
    #cJSON_AddNumberToObject(observation_geometry, word,
                            #zev.$1);
#}
#endsnippet

snippet fr_list_of_word "Description" b
strcpy(list_of_word[index_word], "$1");
index_word += 1;
endsnippet

snippet fr_add_double "Description" b
if (!isnan(zev.${1:varname})) {
	strcpy(word, "$1");
	cJSON_AddNumberToObject(observation_geometry, word,
													zev.$1);
}
endsnippet
snippet fr_add_int "Description" b
if (zev.${1:varname} != zev_init.$1) {
	strcpy(word, "${2:$1}");
	cJSON_AddNumberToObject(${3:grounds}, word,
													zev.$1);
}
endsnippet
